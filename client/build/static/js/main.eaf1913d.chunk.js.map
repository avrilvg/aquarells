{"version":3,"sources":["actions/userSession/userSession.js","reducers/acuarelaReducer.js","reducers/userReducer.js","reducers/index.js","store.js","actions/handleError.js","api/api.js","actions/acuarelaActions.js","components/acuarelas/acuarelaDetail/acuarelaDetail.js","components/about.js","components/common/validator/validator.js","components/common/customTextInput/customTextInput.js","components/common/idGenerator/idGenerator.js","components/common/uploader/uploader.js","components/acuarelas/acuarelaForm/acuarelaForm.js","components/acuarelas/acuarelaFormPage/acuarelaFormPage.js","components/acuarelas/acuarela/acuarela.js","components/acuarelas/acuarelasList/acuarelaList.js","selectors/acuarelaSelectors.js","components/acuarelas/acuarelasByUser/acuarelasByUser.js","components/error.js","components/contact.js","components/home/container.js","components/home/responsiveContainer.js","components/home/home.js","components/user/login/login.js","actions/userActions.js","components/user/profile/profile.js","components/navigation/navigation.js","components/user/signup/signup.js","components/common/privateRoute/privateRoute.js","app.js","serviceWorker.js","index.js"],"names":["UserSession","getToken","localStorage","getItem","setToken","token","setItem","hasToken","getUser","userName","id","saveUser","userData","data","name","_id","deleteUser","removeItem","initalState","Immutable","acuarela","acuarelas","loading","user","isLoggedIn","reducers","acuarelaStore","state","arguments","length","undefined","action","type","merge","payload","Object","toConsumableArray","concat","userStore","rootReducer","combineReducers","createStore","HandleError","error","response","status","alert","store","dispatch","instance","axios","create","interceptors","use","Promise","reject","getHeaders","Authorization","get","route","headers","notAuthorizedPost","post","getAllAcuarelas","then","catch","console","log","saveAcuarela","acuarelaData","author","authorId","POST","AcuarelaDetail","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleGoBack","history","push","handleEdit","handleDelete","getAcuarelaDetails","match","params","_this$props$acuarela","createdDate","technique","material","country","images","rating","react_default","a","createElement","Segment","style","minHeight","padding","Grid","columns","Row","Button","onClick","Column","Image","src","url","size","Header","React","Component","connect","acuarelaId","GET","withRouter","About","ValidatorHelper","notEmptyValue","isValid","value","getMessage","notEmptyText","isString","maxLength","max","minLength","min","isNumber","parseInt","matchEmail","test","matchPhoneNumber","matchSome","items","find","item","validate","validators","errors","forEach","validator","CustomTextInput","handleChange","e","target","setState","onChange","paddingBottom","Form","Input","control","label","icon","iconPosition","placeholder","required","options","defaultValue","Message","list","IDGenerator","generateId","Math","random","toString","substr","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Uploader","event","files","prevState","allAmount","startLoadingPictures","Array","from","file","fileName","task","ref","put","on","snapshot","errorLoadingPictures","getDownloadURL","downloadURL","successLoadingPictures","map","index","key","width","alt","countryOptions","flag","text","techniqueOptions","AcuarelaForm","componentWillReceiveProps","nextProps","image","approved","handleChangeDate","_ref","defineProperty","handleUploadImages","newImage","handleSubmit","Date","onSubmit","centered","customTextInput_CustomTextInput","commonjs","clearable","maxDate","popupPosition","closable","Select","uploader","primary","disabled","isSubmitEnabled","every","AcuarelaFormPage","acuarelaForm","Acuarela","handleViewDetail","pathImage","className","AcuarelasList","loadingMessage","info","Icon","Content","emptyMessage","Link","to","acuarelasList","doubling","acuarelas_acuarela_acuarela","AcuarelasByUser","componentWillMount","Container","paddingTop","userId","filter","getAcuarelasByCurrentUser","ErrorComponent","Contact","DesktopContainer","hideFixedMenu","fixed","showFixedMenu","getWidth","window","Responsive","onlyTablet","minWidth","innerWidth","children","Visibility","once","onBottomPassed","onBottomPassedReverse","ResponsiveContainer","container","Home","responsiveContainer","as","inverted","vertical","divided","stackable","content","List","link","Item","Login","loginUser","email","password","_this$props","Redirect","textAlign","height","verticalAlign","maxWidth","color","Group","fluid","notAuthorizedPOST","Profile","handleItemClick","logoutUSer","trigger","cx","cy","r","fill","x","y","textAnchor","fontSize","dy","toUpperCase","charAt","Dropdown","pointing","top","logoutUser","Navigation","activeItem","handleUploadAcuarela","handleLogin","handleSignup","location","pathname","Menu","secondary","active","position","profile_profile","marginLeft","Signup","birthDate","phoneNumber","description","createUser","TextArea","PrivateRoute","component","authed","rest","objectWithoutProperties","Route","assign","render","App","BrowserRouter","navigation_navigation","Switch","path","exact","privateRoute","Boolean","hostname","ReactDOM","es","src_app","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.eaf1913d.chunk.js","sourcesContent":["/**\n * Handle localstorage data only\n*/\nconst UserSession = {\n  getToken: () => {\n    return localStorage.getItem('user_token');\n  },\n  setToken: (token) => {\n    localStorage.setItem('user_token', token);\n  },\n  hasToken: () => {\n    return localStorage.getItem('user_token') !== null;\n  },\n  getUser: () => {\n    return {\n      userName: localStorage.getItem('user_name') ? localStorage.getItem('user_name') : '',\n      id: localStorage.getItem('user_id') ? localStorage.getItem('user_id') : ''\n    }\n  },\n  saveUser: (userData) => {\n    localStorage.setItem('user_token', userData.token);\n    localStorage.setItem('user_name', userData.data.name);\n    localStorage.setItem('user_id', userData.data._id);\n  },\n  deleteUser: () => {\n    localStorage.removeItem('user_token');\n    localStorage.removeItem('user_name');\n    localStorage.removeItem('user_id');\n  }\n};\n\nexport default UserSession;\n","import Immutable from 'seamless-immutable';\r\n\r\nconst initalState = Immutable({\r\n  acuarela: {},\r\n  acuarelas: [],\r\n  loading: false\r\n});\r\n\r\nexport default (state = initalState, action = {}) => {\r\n  switch (action.type) {\r\n    case 'FETCH_ACUARELAS_START': {\r\n      return state.merge({\r\n        loading: true\r\n      });\r\n    }\r\n\r\n    case 'FETCH_ACUARELAS_FULFILLED': {\r\n      return state.merge({\r\n        acuarelas: action.payload.data.data,\r\n        loading: false\r\n      });\r\n    }\r\n\r\n    case 'FETCH_ACUARELAS_REJECTED': {\r\n      return state.merge({\r\n        loading: false,\r\n      });\r\n    }\r\n\r\n    case 'FETCH_ACUARELAS_BY_USER_START': {\r\n      return state.merge({\r\n        loading: true\r\n      });\r\n    }\r\n\r\n    case 'FETCH_ACUARELAS_BY_USER_FULFILLED': {\r\n      return state.merge({\r\n        acuarelas: action.payload.data.data,\r\n        loading: false\r\n      });\r\n    }\r\n\r\n    case 'FETCH_ACUARELAS_BY_USER_REJECTED': {\r\n      return state.merge({\r\n        loading: false\r\n      });\r\n    }\r\n\r\n    case 'SAVE_ACUARELA_START': {\r\n      return state.merge({\r\n        loading: true\r\n      });\r\n    }\r\n\r\n    case 'SAVE_ACUARELA_FULFILLED': {\r\n      return state.merge({\r\n        acuarela: action.payload.data.data,\r\n        acuarelas: [...state.acuarelas, action.payload.data.data],\r\n        loading: false\r\n      });\r\n    }\r\n\r\n    case 'SAVE_ACUARELA_REJECTED': {\r\n      return state.merge({\r\n        loading: false\r\n      });\r\n    }\r\n\r\n    case 'LOADING_ACUARELA_STARTS': {\r\n      return state.merge({\r\n        loading: true\r\n      });\r\n    }\r\n\r\n    case 'LOADING_ACUARELA_SUCCESS': {\r\n      return state.merge({\r\n        loading: false\r\n      });\r\n    }\r\n\r\n    case 'LOADING_ACUARELA_ERROR': {\r\n      return state.merge({\r\n        loading: false,\r\n      });\r\n    }\r\n\r\n    case 'FETCH_ACUARELA_DETAILS_START': {\r\n      return state.merge({\r\n        loading: true\r\n      });\r\n    }\r\n\r\n    case 'FETCH_ACUARELA_DETAILS_FULFILLED': {\r\n      return state.merge({\r\n        acuarela: action.payload.data.data,\r\n        loading: false\r\n      });\r\n    }\r\n\r\n    case 'FETCH_ACUARELA_DETAILS_REJECTED': {\r\n      return state.merge({\r\n        loading: false,\r\n      });\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import Immutable from 'seamless-immutable';\r\nimport UserSession from '../actions/userSession/userSession';\r\n\r\nconst userData = UserSession.getUser();\r\n\r\n//initial state\r\nconst initalState = Immutable({\r\n  user: {\r\n    isLoggedIn: UserSession.hasToken(),\r\n    data: {\r\n      name: userData.userName,\r\n      _id: userData.id\r\n    }\r\n  },\r\n  loading: false\r\n});\r\n\r\nexport default (state = initalState, action = {}) => {\r\n  switch (action.type) {\r\n    case 'CREATE_USER_START': {\r\n      return state.merge({\r\n        loading: true\r\n      });\r\n    }\r\n\r\n    case 'CREATE_USER_FULFILLED': {\r\n      UserSession.saveUser(action.payload.data);\r\n      return state.merge({\r\n        user: {\r\n          data: action.payload.data.data,\r\n          isLoggedIn: true\r\n        },\r\n        loading: false\r\n      });\r\n    }\r\n\r\n    case 'CREATE_USER_REJECTED': {\r\n      return state.merge({\r\n        loading: false\r\n      });\r\n    }\r\n\r\n    case 'USER_LOGIN_START': {\r\n      return state.merge({\r\n        loading: true\r\n      });\r\n    }\r\n\r\n    case 'USER_LOGIN_FULFILLED': {\r\n      UserSession.saveUser(action.payload.data);\r\n      return state.merge({\r\n        user: {\r\n          data: action.payload.data.data,\r\n          isLoggedIn: true\r\n        },\r\n        loading: false\r\n      });\r\n    }\r\n\r\n    case 'USER_LOGIN_REJECTED': {\r\n      return state.merge({\r\n        loading: false\r\n      });\r\n    }\r\n\r\n    case 'USER_LOGOUT': {\r\n      UserSession.deleteUser();\r\n      return state.merge({\r\n        user: {\r\n          data: {},\r\n          isLoggedIn: false\r\n        },\r\n        loading: false\r\n      });\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport AcuarelaReducer from './acuarelaReducer';\r\nimport UserReducer from './userReducer';\r\n\r\nconst reducers = {\r\n  acuarelaStore: AcuarelaReducer,\r\n  userStore: UserReducer\r\n}\r\n\r\nconst rootReducer = combineReducers(reducers);\r\n\r\nexport default rootReducer;\r\n","import { createStore } from 'redux';\r\nimport rootReducer from './reducers';\r\n\r\nexport default createStore(rootReducer);\r\n","\nimport store from '../store';\n\nexport const HandleError = (error) => {\n  //TODO refactor to support more generic error errors\n  if (error.response && error.response.status === 401) {\n    //TODO handle a generic notification\n    alert('user was loggout out because session has expired');\n    store.dispatch({\n      type: 'USER_LOGOUT'\n    });\n  }\n}\n\nexport default HandleError;\n","import axios from 'axios';\r\nimport UserSession from '../actions/userSession/userSession';\r\nimport HandleError from '../actions/handleError'\r\n\r\nconst baseUrl = '';\r\n\r\nconst instance = axios.create();\r\n\r\n// Add a response interceptor\r\ninstance.interceptors.response.use(response => {\r\n  return response;\r\n}, error => {\r\n  HandleError(error); //handle generic errors\r\n  return Promise.reject(error);\r\n});\r\n\r\nconst getHeaders = () => {\r\n  const token = UserSession.getToken();\r\n  return {\r\n    'Authorization': `Bearer ${token}`\r\n  }\r\n}\r\n\r\nconst get = (route) => {\r\n  const headers = getHeaders();\r\n  return instance.get(`${baseUrl}/${route}`, { headers });\r\n}\r\n\r\nconst post = (route, data) => {\r\n  const headers = getHeaders();\r\n  return instance.post(`${baseUrl}/${route}`, data, { headers } );\r\n}\r\n\r\nconst notAuthorizedGet = (route) => {\r\n  return instance.get(`${baseUrl}/${route}`);\r\n}\r\n\r\nconst notAuthorizedPost = (route, data) => {\r\n  return instance.post(`${baseUrl}/${route}`, data);\r\n}\r\n\r\nexport {\r\n  get as GET,\r\n  post as POST,\r\n  notAuthorizedPost as notAuthorizedPOST,\r\n  notAuthorizedGet as notAuthorizedGET\r\n}\r\n","import { GET, POST, notAuthorizedGET } from '../api/api';\r\nimport UserSession from '../actions/userSession/userSession';\r\n\r\nconst url = 'acuarelas';\r\n\r\nexport const getAllAcuarelas = (dispatch) => {\r\n  dispatch({\r\n    type: 'FETCH_ACUARELAS_START'\r\n  });\r\n  notAuthorizedGET(url, dispatch)\r\n    .then(response => {\r\n      dispatch({\r\n        type: 'FETCH_ACUARELAS_FULFILLED',\r\n        payload: response\r\n      });\r\n    })\r\n    .catch(error => {\r\n      console.log('fetch acuarelas error', error);\r\n      dispatch({\r\n        type: 'FETCH_ACUARELAS_REJECTED',\r\n      });\r\n    })\r\n}\r\n\r\nexport const getAcuarelasByCurrentUser = (dispatch) => {\r\n  dispatch({\r\n    type: 'FETCH_ACUARELAS_BY_USER_START'\r\n  });\r\n  const authorId = UserSession.getUser().id;\r\n  GET(`${url}/user/${authorId}`)\r\n    .then(response => {\r\n      dispatch({\r\n        type: 'FETCH_ACUARELAS_BY_USER_FULFILLED',\r\n        payload: response\r\n      });\r\n    })\r\n    .catch(error => {\r\n      console.log('fetch acuarelas by user error', error);\r\n      dispatch({\r\n        type: 'FETCH_ACUARELAS_BY_USER_REJECTED',\r\n      });\r\n    })\r\n}\r\n\r\nexport const getAcuarelaDetails = (dispatch, acuarelaId) => {\r\n  dispatch({\r\n    type: 'FETCH_ACUARELA_DETAILS_START'\r\n  });\r\n  GET(`${url}/${acuarelaId}`)\r\n    .then(response => {\r\n      dispatch({\r\n        type: 'FETCH_ACUARELA_DETAILS_FULFILLED',\r\n        payload: response\r\n      });\r\n    })\r\n    .catch(error => {\r\n      console.log('fetch acuarelas by user error', error);\r\n      dispatch({\r\n        type: 'FETCH_ACUARELA_DETAILS_REJECTED',\r\n      });\r\n    })\r\n}\r\n\r\nexport const saveAcuarela = (dispatch, acuarelaData) => {\r\n  dispatch({\r\n    type: 'SAVE_ACUARELA_START'\r\n  });\r\n  //TODO add author id and name before the save it, improve it\r\n  const userData =  UserSession.getUser();\r\n  acuarelaData.author = userData.userName;\r\n  acuarelaData.authorId = userData.id;\r\n  POST(url, acuarelaData)\r\n    .then(response => {\r\n      dispatch({\r\n        type: 'SAVE_ACUARELA_FULFILLED',\r\n        payload: response\r\n      });\r\n    })\r\n    .catch(error => {\r\n      console.log('save acuarela error', error);\r\n      dispatch({\r\n        type: 'SAVE_ACUARELA_REJECTED',\r\n      });\r\n    })\r\n}\r\n\r\nexport const startLoadingPictures = (dispatch) => {\r\n  dispatch({\r\n    type: 'LOADING_ACUARELA_STARTS'\r\n  });\r\n}\r\n\r\nexport const successLoadingPictures = (dispatch) => {\r\n  dispatch({\r\n    type: 'LOADING_ACUARELA_SUCCESS'\r\n  });\r\n}\r\n\r\nexport const errorLoadingPictures = (dispatch, error) => {\r\n  dispatch({\r\n    type: 'LOADING_ACUARELA_ERROR',\r\n    error\r\n  });\r\n}\r\n","import { connect } from 'react-redux';\nimport { Grid, Image, Rating, Header, Button, Segment } from 'semantic-ui-react';\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport { getAcuarelaDetails } from '../../../actions/acuarelaActions';\n\n// import './acuarela.css';\n\nclass AcuarelaDetail extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    this.props.getAcuarelaDetails(this.props.match.params.id);\n  }\n\n  handleGoBack = () => {\n    this.props.history.push('/');\n  }\n\n  handleEdit = () => {\n    console.log('edit acuarela');\n  }\n\n  handleDelete = () => {\n    console.log('delete acuarela');\n  }\n\n  render() {\n    const { name, createdDate, technique, material, country, rating, images } = this.props.acuarela;\n\n    return (\n      <Segment style={{ minHeight: 500, padding: '50px' }}>\n        <Grid columns={2}>\n          <Grid.Row>\n            <Button onClick={this.handleGoBack}>Back</Button>\n          </Grid.Row>\n          <Grid.Column>\n            {/* TODO just for now we are going to show first picture */}\n            <Image src={images? images[0].url: ''} size='medium' />\n          </Grid.Column>\n          <Grid.Column>\n            <Header size='medium'>{name}</Header>\n            {/* <Rating icon='star' defaultRating={rating? rating: 0} maxRating={4} /> */}\n            <br /> {createdDate}\n            <br /> {technique}\n            <br /> {material}\n            <br /> {country}\n          </Grid.Column>\n          <Grid.Row>\n            <Button onClick={this.handleEdit}>Edit</Button>\n            <Button onClick={this.handleDelete}>Delete</Button>\n          </Grid.Row>\n        </Grid>\n      </Segment>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  acuarela: state.acuarelaStore.acuarela,\n  loading: state.acuarelaStore.loading\n})\n\nconst mapDispatchToProps = dispatch => ({\n  getAcuarelaDetails: (acuarelaId) => getAcuarelaDetails(dispatch, acuarelaId)\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(AcuarelaDetail));\n","import React from 'react';\r\nimport { Segment } from 'semantic-ui-react';\r\n\r\nconst About = () => {\r\n  return (\r\n    <Segment\r\n          style={{ minHeight: 700, padding: '1em 0em' }}\r\n    >\r\n      <strong style={{padding:'13px'}}>\r\n        We are Acuarelas with water! Enjoy!\r\n      </strong>\r\n    </Segment>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","/**\r\n * Validate if values follow pattern\r\n */\r\nconst ValidatorHelper = {\r\n    notEmptyValue: () => {\r\n        return {\r\n            isValid: (value) => {\r\n                return value? true: false;\r\n            },\r\n            getMessage: () => 'Not allowed to be an empty value'\r\n        }\r\n    },\r\n    //strings\r\n    notEmptyText: () => {\r\n        return {\r\n            isValid: (value) => {\r\n                return value !== \"\";\r\n            },\r\n            getMessage: () => 'Not allowed to be an empty string'\r\n        }\r\n    },\r\n    isString : () => {\r\n        return {\r\n            isValid: (value) => {\r\n                let type = typeof value;\r\n                return type === \"string\";\r\n            },\r\n            getMessage: () => `Only allowed text in here`\r\n        }\r\n    },\r\n    maxLength: (max) => {\r\n        return {\r\n            isValid: (value) => {\r\n                return value? value.length <= max: true;\r\n            },\r\n            getMessage: () => `Not allowed size to be more than ${max} characteres`\r\n        }\r\n    },\r\n    minLength: (min) => {\r\n        return {\r\n            isValid: (value) => {\r\n                return value? value.length >= min: true;\r\n            },\r\n            getMessage: () => `Not allowed size to be less than ${min} characteres`\r\n        }\r\n    },\r\n    //numbers\r\n    isNumber: () => {\r\n        return {\r\n            isValid: (value) => {\r\n                let type = typeof parseInt(value);\r\n                return value? type === \"number\": true;\r\n            },\r\n            getMessage: () => `Only allowed numbers in here`\r\n        }\r\n    },\r\n    max: (max) => {\r\n        return {\r\n            isValid: (value) => {\r\n                return value? parseInt(value) <= max: true;\r\n            },\r\n            getMessage: () => `Not allowed number to be more than ${max}`\r\n        }\r\n    },\r\n    min: (min) => {\r\n        return {\r\n            isValid: (value) => {\r\n                return value? parseInt(value) >= min: true;\r\n            },\r\n            getMessage: () => `Not allowed number to be less than ${min}`\r\n        }\r\n    },\r\n    //email\r\n    matchEmail: () => {\r\n        return {\r\n            isValid: (value) => {\r\n                return /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/.test(value);\r\n            },\r\n            getMessage: () => `Email should match pattern example@gmail.com`\r\n        }\r\n    },\r\n    //argentina phone number pattern\r\n    matchPhoneNumber: () => {\r\n        return {\r\n            isValid: (value) => {\r\n                return value? /^((\\(?\\d{3}\\)? \\d{4})|(\\(?\\d{4}\\)? \\d{3})|(\\(?\\d{5}\\)? \\d{2}))-\\d{4}$/.test(value) : true;\r\n            },\r\n            getMessage: () => `\r\n                Phone number should follow pattern\r\n                Area Code could be 3 to 5 digits\r\n                Prefix could be 2 to 4 digits.\r\n                Area Code + Prefix is 7 digits long.\r\n                Sufix is always 4 digits long\r\n                Total digits are 11. Example (011) 4740-5000\r\n            `\r\n        }\r\n    },\r\n    //mix\r\n    matchSome: (items) => {\r\n        return {\r\n            isValid: (value) => {\r\n                return items.find(item => item === value) != null;\r\n            },\r\n            getMessage: () => `Not allowed other countries which are not on the list`\r\n        }\r\n    },\r\n    //validate all list of validators\r\n    validate: (value, validators) => {\r\n        const errors = [];\r\n        validators.forEach(validator => {\r\n            if(!validator.isValid(value)) {\r\n                errors.push(validator.getMessage());\r\n            }\r\n        });\r\n        return errors;\r\n    }\r\n};\r\n\r\nexport default ValidatorHelper;\r\n","import { Message, Form} from 'semantic-ui-react';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nimport ValidatorHelper from '../validator/validator';\r\n\r\n/**\r\n * Based on Form.Input supported field in Semantic ui ^0.83.0\r\n */\r\nexport default class CustomTextInput extends React.Component {\r\n\r\n  static propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    label: PropTypes.string.isRequired,\r\n    validators: PropTypes.array.isRequired,\r\n    type: PropTypes.string,\r\n    control: PropTypes.any,\r\n    onChange: PropTypes.func.isRequired,\r\n    required: PropTypes.bool.isRequired,\r\n    options: PropTypes.array\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      errors: []\r\n    };\r\n  }\r\n\r\n  handleChange = (e, data) => {\r\n    let value = data? data.value: e.target.value;\r\n    this.setState({\r\n      errors: ValidatorHelper.validate(value, this.props.validators)\r\n    });\r\n    this.props.onChange(this.props.name, value);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ paddingBottom: '10px' }}>\r\n        <Form.Input\r\n          control={this.props.control? this.props.control: 'Input'}\r\n          label={this.props.label}\r\n          icon={this.props.icon? this.props.icon : ''}\r\n          iconPosition='left'\r\n          placeholder={this.props.placeholder? this.props.placeholder: ''}\r\n          type={this.props.type? this.props.type: 'text'}\r\n          onChange={this.handleChange}\r\n          error={this.state.errors.length > 0}\r\n          required={this.props.required}\r\n          options={this.props.options? this.props.options: []}\r\n          defaultValue={this.props.options? this.props.options[0].value: ''}\r\n        />\r\n        {this.state.errors.length? (<Message error list={this.state.errors} />) : ''}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","const IDGenerator = {\n  /**\n   * Creates a string that can be used for dynamic id attributes\n   * Example: \"id-so7567s1pcpojemi\"\n   * @returns {string}\n   */\n  generateId: () => {\n      return 'id-' + Math.random().toString(36).substr(2, 16);\n  }\n};\n\nexport default IDGenerator;\n","\nimport { connect } from 'react-redux';\nimport * as firebase from 'firebase';\nimport { Form} from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport IDGenerator from '../idGenerator/idGenerator';\nimport {\n  errorLoadingPictures,\n  successLoadingPictures,\n  startLoadingPictures\n} from '../../../actions/acuarelaActions';\n\n//TODO how to handle this?\nvar config = {\n  apiKey: \"AIzaSyBD4K23nKLiuNpiBVjiy4oTVABNL3KHiAA\",\n  authDomain: \"acuarela-30846.firebaseapp.com\",\n  databaseURL: \"https://acuarela-30846.firebaseio.com\",\n  projectId: \"acuarela-30846\",\n  storageBucket: \"acuarela-30846.appspot.com\",\n  messagingSenderId: \"375639310472\"\n};\nfirebase.initializeApp(config);\n\nclass Uploader extends React.Component {\n\n  static propTypes = {\n    label: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n  };\n\n  constructor () {\n    super();\n    this.state = {\n      files: [],\n      allAmount: 0 //amount of files that will be loaded\n    }\n  }\n\n  handleChange = (event) => {\n    const files = event.target.files;\n\n    this.setState( prevState => ({\n      allAmount: prevState.allAmount + files.length\n    }));\n    this.props.startLoadingPictures();\n\n    Array.from(files).forEach(file => {\n      const fileName = IDGenerator.generateId();\n      const storageRef = firebase.storage().ref(`pictures/${fileName}`);\n      const task = storageRef.put(file);\n\n      task.on('state_changed', (snapshot) => {\n        //TODO do something with the percentage\n        // let percentage = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n      }, (error) => {\n        this.props.errorLoadingPictures(`Error when uploading ${error}`);\n      }, () => {\n        task.snapshot.ref.getDownloadURL().then((downloadURL) => {\n          //here we are duplicanting save downloadURL in parent and current state\n          this.setState(prevState => ({\n            // files: [...prevState.files, downloadURL ] TODO enable for multiple files\n            files: [ downloadURL ]\n          }));\n          // () => { TODO enable for multiple files\n            // if (this.state.files.length === this.state.allAmount) { TODO enable for multiple files\n          this.props.successLoadingPictures();\n            //} TODO enable for multiple files\n          //}) TODO enable for multiple files\n          //to save in db\n          this.props.onChange({\n            name: fileName,\n            url: downloadURL\n          });\n        });\n      })\n    });\n  }\n\n  render () {\n    return (\n      <div>\n        <Form.Input\n          label={this.props.label}\n          onChange={this.handleChange}\n          type='file'\n          //multiple TODO enable to have multiple pictures\n          required\n        />\n        {\n          this.state.files.map((url, index) => {\n            return (\n              // <Progress percent={this.props.percentage} progress success={this.props.percentage === 100}></Progress>\n              <img key={index} width='190' src={url} alt={`Acuarela nro ${index}`} />\n            );\n          })\n        }\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = () => ({});\n\nconst mapDispatchToProps = dispatch => ({\n  startLoadingPictures: () => startLoadingPictures(dispatch),\n  successLoadingPictures: () => successLoadingPictures(dispatch),\n  errorLoadingPictures: (error) => errorLoadingPictures(dispatch, error)\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Uploader);\n","import { DateInput } from 'semantic-ui-calendar-react';\r\nimport { Button, Form, Input, Select, Grid} from 'semantic-ui-react';\r\nimport PropTypes from 'prop-types';\r\nimport React, { Component } from 'react';\r\n\r\nimport CustomTextInput from '../../common/customTextInput/customTextInput';\r\nimport ValidatorHelper from '../../common/validator/validator';\r\nimport Uploader from '../../common/uploader/uploader';\r\n\r\n//TODO bring to other place\r\nconst countryOptions = [\r\n  { key: 'ar', value: 'ar', flag: 'ar', text: 'Argentina' },\r\n  { key: 'bo', value: 'bo', flag: 'bo', text: 'Bolivia' },\r\n  { key: 'cl', value: 'cl', flag: 'cl', text: 'Chile' },\r\n  { key: 'cn', value: 'cn', flag: 'cn', text: 'China' },\r\n  { key: 'co', value: 'co', flag: 'co', text: 'Colombia' },\r\n  { key: 'it', value: 'it', flag: 'it', text: 'Italy' },\r\n  { key: 'jp', value: 'jp', flag: 'jp', text: 'Japan' },\r\n  { key: 'us', value: 'us', flag: 'us', text: 'United States' }\r\n];\r\n\r\nconst techniqueOptions = [\r\n  { key: 'wa', value: 'wa', text: 'Water' },\r\n  { key: 'bo', value: 'bo', text: 'Paper' },\r\n  { key: 'pl', value: 'pl', text: 'Plastic' },\r\n  { key: 'cl', value: 'cl', text: 'Colors' },\r\n];\r\n\r\nclass AcuarelaForm extends Component {\r\n\r\n  static propTypes = {\r\n    acuarela: PropTypes.object,\r\n    loading: PropTypes.bool.isRequired,\r\n  };\r\n\r\n  componentWillReceiveProps = (nextProps) => { // Load Acuarela\r\n    /*const { acuarela } = nextProps;\r\n    if(acuarela._id !== this.props.acuarela._id) { // Initialize form only once\r\n      this.props.initialize(acuarela)\r\n    }*/\r\n  }\r\n\r\n  state = {\r\n    name: '',\r\n    createdDate: '',\r\n    image: '',\r\n    technique: techniqueOptions[0].value,\r\n    material: 'default',\r\n    country: countryOptions[0].value,\r\n    approved: '',\r\n    rating: '5',\r\n    images: []\r\n  };\r\n\r\n  handleChangeDate = (event, {name, value}) => {\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  handleChange = (name, value) => {\r\n    this.setState({ [name]: value });\r\n  }\r\n\r\n  handleUploadImages = (newImage) => {\r\n    this.setState(prevState => ({\r\n      images: [...prevState.images, newImage ]\r\n    }))\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    this.setState( prevState => ({\r\n      //how to improve this? it shows a warning in console :/\r\n      createdDate: new Date(prevState.createdDate)\r\n    }), () => {\r\n      this.props.onSubmit(this.state);\r\n    });\r\n  }\r\n\r\n  get isSubmitEnabled () {\r\n    const validators = [\r\n      ValidatorHelper.notEmptyText().isValid(this.state.name),\r\n      ValidatorHelper.notEmptyValue().isValid(this.state.createdDate),\r\n      ValidatorHelper.notEmptyText().isValid(this.state.technique),\r\n      ValidatorHelper.notEmptyText().isValid(this.state.country),\r\n      this.state.images.length > 0\r\n    ];\r\n    return validators.every(validator => validator === true);\r\n  }\r\n\r\n  render() {\r\n\r\n    const { loading } = this.props;\r\n\r\n    return (\r\n      <Grid centered columns={2}>\r\n        <Grid.Column>\r\n          <h2>{'New Acuarela'}</h2>\r\n          {/* <h1 style={{marginTop:\"1em\"}}>{acuarela._id ? 'Edit Contact' : 'Add New Contact'}</h1> */}\r\n          <Form onSubmit={this.handleSubmit} loading={loading} error>\r\n            <CustomTextInput\r\n              name='name'\r\n              control={Input}\r\n              icon='paint brush'\r\n              placeholder='Acuarela name'\r\n              validators={[ValidatorHelper.notEmptyText(), ValidatorHelper.maxLength(20)]}\r\n              onChange={this.handleChange}\r\n              required={true}\r\n            />\r\n\r\n            <DateInput\r\n                clearable\r\n                name='createdDate'\r\n                iconPosition='left'\r\n                value={this.state.createdDate}\r\n                onChange={this.handleChangeDate}\r\n                maxDate={new Date()}\r\n                popupPosition='bottom right'\r\n                closable\r\n                placeholder=\"Year of\"\r\n            />\r\n\r\n            <CustomTextInput\r\n              name='technique'\r\n              control={Select}\r\n              placeholder=''\r\n              validators={[ValidatorHelper.notEmptyText()]}\r\n              onChange={this.handleChange}\r\n              required={true}\r\n              options={techniqueOptions}\r\n            />\r\n\r\n            <CustomTextInput\r\n              name='country'\r\n              control={Select}\r\n              placeholder=''\r\n              validators={[ValidatorHelper.notEmptyText()]}\r\n              onChange={this.handleChange}\r\n              required={true}\r\n              options={countryOptions}\r\n            />\r\n\r\n            <Uploader\r\n              onChange={this.handleUploadImages}\r\n            />\r\n            \r\n            <br></br>\r\n\r\n            <Button primary type='submit' disabled={!this.isSubmitEnabled}>Save</Button>\r\n          </Form>\r\n\r\n        </Grid.Column>\r\n      </Grid>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AcuarelaForm;\r\n","import { connect } from 'react-redux';\r\nimport React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Segment } from 'semantic-ui-react';\r\n\r\nimport AcuarelaForm from '../acuarelaForm/acuarelaForm';\r\nimport { saveAcuarela } from '../../../actions/acuarelaActions';\r\n\r\n//import './AcuarelaFormPage.css';\r\n\r\n//TODO also to update acuarela\r\nclass AcuarelaFormPage extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  handleSubmit = (acuarela) => {\r\n    this.props.saveAcuarela(acuarela);\r\n    this.props.history.push('/');\r\n\r\n    /*if(!contact._id) {\r\n      return this.props.saveContact(contact)\r\n        .then(response => this.setState({ redirect:true }))\r\n        .catch(err => {\r\n           throw new SubmissionError(this.props.errors)\r\n         })\r\n    } else {\r\n      return this.props.updateContact(contact)\r\n        .then(response => this.setState({ redirect:true }))\r\n        .catch(err => {\r\n           throw new SubmissionError(this.props.errors)\r\n         })\r\n    }*/\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Segment style={{ minHeight: 500, padding: '50px' }}>\r\n        <AcuarelaForm\r\n          // acuarela={this.props.acuarela}\r\n          loading={this.props.loading}\r\n          onSubmit={this.handleSubmit}\r\n        />\r\n      </Segment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  // acuarela: state.acuarelaStore.acuarela,\r\n  loading: state.acuarelaStore.loading\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  saveAcuarela: (acuarela) => saveAcuarela(dispatch, acuarela)\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(AcuarelaFormPage));\r\n","import { Grid, Image, Rating, Header, Icon } from 'semantic-ui-react';\r\nimport React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport './acuarela.css';\r\n\r\nclass Acuarela extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  handleViewDetail = () => {\r\n    this.props.history.push(`/acuarela-detail/${this.props.id}`);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Grid.Column onClick={this.handleViewDetail}>\r\n        <Image src={this.props.pathImage} size='medium' />\r\n        <Header size='medium' className=\"picture-name\">{this.props.name}</Header>\r\n        <div className=\"picture-author\">{this.props.author? `By: ${this.props.author}`: ''}</div>\r\n        {/* <Grid.Row>\r\n          <Rating icon='star' defaultRating={3} maxRating={4} />&nbsp;({this.props.rating})\r\n        </Grid.Row> */}\r\n      </Grid.Column>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Acuarela);\r\n","import React from 'react';\r\nimport { Grid, Message, Icon } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Acuarela from '../acuarela/acuarela';\r\n\r\nexport default function AcuarelasList({\r\n  acuarelas,\r\n  loading\r\n}){\r\n\r\n  const loadingMessage = (\r\n    <Message icon info>\r\n      <Icon name='circle notched' loading />\r\n      <Message.Content>\r\n          <Message.Header>Just one second</Message.Header>\r\n          We are fetching all acuarelas...\r\n      </Message.Content>\r\n    </Message>\r\n  );\r\n\r\n  const emptyMessage = (\r\n    <Message icon info>\r\n      <Icon name='warning circle' />\r\n      <Message.Content>\r\n          <Message.Header>No acuarelas found</Message.Header>\r\n          <p>Add some new acuarelas to get started...</p>\r\n          <Link to={'/acuarela-form'} className=\"ui button primary\">Add New Acuarela</Link>\r\n      </Message.Content>\r\n    </Message>\r\n  );\r\n\r\n  // const timeoutMessage = (\r\n  //   <Message icon negative>\r\n  //     <Icon name='wait' />\r\n  //     <Message.Content>\r\n  //         <Message.Header>{error.message}</Message.Header>\r\n  //     </Message.Content>\r\n  //   </Message>\r\n  // );\r\n\r\n  const acuarelasList = (\r\n    <Grid doubling columns={6}>\r\n      {\r\n        acuarelas.map((acuarela, index) => {\r\n          return <Acuarela\r\n            key={index}\r\n            id={acuarela._id}\r\n            name={acuarela.name}\r\n            author={acuarela.author}\r\n            rating={acuarela.rating}\r\n            pathImage={(acuarela.images && acuarela.images.length)? acuarela.images[0].url : 'https://react.semantic-ui.com/images/wireframe/image.png'}\r\n          />;\r\n        })\r\n      }\r\n    </Grid>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      { loading && loadingMessage }\r\n      { acuarelas.length === 0 && !loading && emptyMessage }\r\n      { acuarelas.length > 0 && acuarelasList }\r\n    </div>\r\n  );\r\n}\r\n","export const getAcuarelasByUser = (store, userId) => {\n  return store.acuarelas.filter(acuarela => acuarela.authorId === userId );\n};\n","import { connect } from 'react-redux';\nimport React from 'react';\nimport { Container, Segment } from 'semantic-ui-react';\n\nimport AcuarelasList from '../acuarelasList/acuarelaList';\nimport { getAcuarelasByCurrentUser, getAllAcuarelas } from '../../../actions/acuarelaActions';\nimport { getAcuarelasByUser } from '../../../selectors/acuarelaSelectors';\n\nclass AcuarelasByUser extends React.Component {\n\n  componentWillMount = () => { }\n\n  render() {\n    return (\n      <Segment style={{ minHeight: 500, padding: '50px' }}>\n        <Container style={{paddingTop:'20px'}}>\n          <AcuarelasList\n            acuarelas={this.props.acuarelas}\n            loading={this.props.loading}\n          />\n        </Container>\n      </Segment>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  acuarelas: getAcuarelasByUser(state.acuarelaStore, state.userStore.user.data._id),\n  loading: state.acuarelaStore.loading\n})\n\nconst mapDispatchToProps = dispatch => ({\n  getAcuarelasByCurrentUser: () => getAcuarelasByCurrentUser(dispatch),\n  getAllAcuarelas: () => getAllAcuarelas(dispatch)\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AcuarelasByUser);\n","import React from 'react';\r\n\r\nconst ErrorComponent = () => {\r\n  return (\r\n    <div>\r\n      <p>\r\n        Error: path does not exists\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ErrorComponent;\r\n","import React from 'react';\r\nimport { Segment } from 'semantic-ui-react';\r\n\r\nconst Contact = () => {\r\n  return (\r\n    <Segment\r\n          style={{ minHeight: 700, padding: '1em 0em' }}\r\n    >\r\n      <strong style={{padding:'13px'}}>\r\n        Please contact us to acuas@gmail.com =)\r\n      </strong>\r\n    </Segment>\r\n  );\r\n}\r\n\r\nexport default Contact;\r\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport {\n  Responsive,\n  Segment,\n  Visibility,\n} from 'semantic-ui-react';\n\nimport HomepageHeading from './homepageHeading';\n\n/* Heads up!\n * Neither Semantic UI nor Semantic UI React offer a responsive navbar, however, it can be implemented easily.\n * It can be more complicated, but you can create really flexible markup.\n */\nclass DesktopContainer extends Component {\n  state = {}\n\n  hideFixedMenu = () => this.setState({ fixed: false })\n  showFixedMenu = () => this.setState({ fixed: true })\n\n  getWidth = () => {\n    const isSSR = typeof window === 'undefined'\n  \n    return isSSR ? Responsive.onlyTablet.minWidth : window.innerWidth\n  }\n\n  render() {\n    const { children } = this.props\n\n    return (\n      <Responsive getWidth={this.getWidth} minWidth={Responsive.onlyTablet.minWidth}>\n        <Visibility\n          once={false}\n          onBottomPassed={this.showFixedMenu}\n          onBottomPassedReverse={this.hideFixedMenu}\n        >\n          {/* <Segment\n            inverted\n            textAlign='center'\n            style={{ minHeight: 700, padding: '1em 0em' }}\n            vertical\n          > */}\n          {/* <HomepageHeading /> */}\n          {/* </Segment> */}\n        </Visibility>\n\n        {children}\n      </Responsive>\n    )\n  }\n}\n\nDesktopContainer.propTypes = {\n  children: PropTypes.node,\n}\n\nexport default DesktopContainer;","import PropTypes from 'prop-types';\nimport React from 'react';\nimport Container from './container';\n\nconst ResponsiveContainer = ({ children }) => (\n  <div>\n    <Container>{children}</Container>\n  </div>\n)\n\nResponsiveContainer.propTypes = {\n  children: PropTypes.node,\n}\n\nexport default ResponsiveContainer;\n","import { connect } from 'react-redux';\r\nimport React from 'react';\r\nimport AcuarelasList from '../acuarelas/acuarelasList/acuarelaList';\r\nimport { getAllAcuarelas } from '../../actions/acuarelaActions';\r\n\r\nimport './home.css';\r\n\r\nimport {\r\n  Container,\r\n  Grid,\r\n  Header,\r\n  List,\r\n  Segment,\r\n} from 'semantic-ui-react';\r\nimport ResponsiveContainer from './responsiveContainer';\r\n\r\n\r\nclass Home extends React.Component {\r\n\r\n  componentWillMount = () => {\r\n    this.props.getAllAcuarelas();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <ResponsiveContainer>\r\n        <Segment\r\n          style={{ minHeight: 700, padding: '1em 0em' }}\r\n        >\r\n          <Container style={{paddingTop:'20px'}}>\r\n            <Header as='h2'>Francisco Tomé</Header>&nbsp;<span>127 results</span>\r\n            <AcuarelasList\r\n              acuarelas={this.props.acuarelas}\r\n              loading={this.props.loading}\r\n            />\r\n          </Container>\r\n        </Segment>\r\n        <Segment inverted vertical style={{ padding: '5em 0em' }}>\r\n          <Container>\r\n            <Grid divided inverted stackable>\r\n              <Grid.Row>\r\n                <Grid.Column width={3}>\r\n                  <Header inverted as='h4' content='About' />\r\n                  <List link inverted>\r\n                    <List.Item as='a'>Sitemap</List.Item>\r\n                    <List.Item as='a'>Contact Us</List.Item>\r\n                    <List.Item as='a'>Religious Ceremonies</List.Item>\r\n                    <List.Item as='a'>Gazebo Plans</List.Item>\r\n                  </List>\r\n                </Grid.Column>\r\n                <Grid.Column width={3}>\r\n                  <Header inverted as='h4' content='Services' />\r\n                  <List link inverted>\r\n                    <List.Item as='a'>Banana Pre-Order</List.Item>\r\n                    <List.Item as='a'>DNA FAQ</List.Item>\r\n                    <List.Item as='a'>How To Access</List.Item>\r\n                    <List.Item as='a'>Favorite X-Men</List.Item>\r\n                  </List>\r\n                </Grid.Column>\r\n                <Grid.Column width={7}>\r\n                  <Header as='h4' inverted>\r\n                    Footer Header\r\n                  </Header>\r\n                  <p>\r\n                    Extra space for a call to action inside the footer that could help re-engage users.\r\n                  </p>\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n            </Grid>\r\n          </Container>\r\n        </Segment>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  acuarelas: state.acuarelaStore.acuarelas,\r\n  loading: state.acuarelaStore.loading,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getAllAcuarelas: () => getAllAcuarelas(dispatch),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n","import { Button, Form, Grid, Header, Image, Message, Segment, Icon, Input } from 'semantic-ui-react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport React from 'react';\r\nimport { Redirect, Link } from 'react-router-dom';\r\n\r\nimport CustomTextInput from '../../common/customTextInput/customTextInput';\r\nimport { loginUser } from '../../../actions/userActions';\r\nimport ValidatorHelper from '../../common/validator/validator';\r\n\r\nimport './login.css';\r\n\r\nclass Login extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: '',\r\n      password: ''\r\n    }\r\n  }\r\n\r\n  handleChange = (name, value) => {\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = () => {\r\n    this.props.loginUser(this.state);\r\n  }\r\n\r\n  get isSubmitEnabled () {\r\n    const validators = [\r\n      ValidatorHelper.notEmptyText().isValid(this.state.email),\r\n      ValidatorHelper.matchEmail().isValid(this.state.email),\r\n      ValidatorHelper.notEmptyText().isValid(this.state.password),\r\n      ValidatorHelper.minLength(8).isValid(this.state.password),\r\n      ValidatorHelper.maxLength(15).isValid(this.state.password)\r\n    ];\r\n    return validators.every(validator => validator === true);\r\n  }\r\n\r\n  render() {\r\n    const { loading, user } = this.props;\r\n\r\n    if (user.isLoggedIn) return <Redirect to='/' />;\r\n\r\n    return (\r\n      <Grid textAlign='center' style={{ height: '100%' }} verticalAlign='middle'>\r\n        <Grid.Column style={{ maxWidth: 450 }}>\r\n          <Header as='h2' style={{ color: 'white' }} textAlign='center'>\r\n            <Icon.Group size='large'>\r\n              <Icon name='paint brush' />\r\n            </Icon.Group>\r\n            ACUAS\r\n          </Header>\r\n          <Form size='large' loading={loading} onSubmit={this.handleSubmit} error>\r\n            <Segment>\r\n              <CustomTextInput\r\n                name='email'\r\n                control={Input}\r\n                icon='mail'\r\n                placeholder='Email addresss'\r\n                validators={[ValidatorHelper.notEmptyText(), ValidatorHelper.matchEmail()]}\r\n                onChange={this.handleChange}\r\n                required={true}\r\n              />\r\n\r\n              <CustomTextInput\r\n                name='password'\r\n                control={Input}\r\n                type='password'\r\n                icon='lock'\r\n                placeholder='Password'\r\n                validators={[ValidatorHelper.notEmptyText(), ValidatorHelper.maxLength(15), ValidatorHelper.minLength(8)]}\r\n                onChange={this.handleChange}\r\n                required={true}\r\n              />\r\n              <Button primary disabled={!this.isSubmitEnabled} color='teal' fluid size='large'>\r\n                Login\r\n              </Button>\r\n            </Segment>\r\n          </Form>\r\n          <Message>\r\n            New to us? <Link to='/signup'>Sign Up</Link>\r\n          </Message>\r\n        </Grid.Column>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  user: state.userStore.user,\r\n  loading: state.userStore.loading\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  loginUser: (userData) => loginUser(dispatch, userData)\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","import { notAuthorizedPOST } from '../api/api';\r\n\r\nconst url = 'users';\r\n\r\nexport const createUser = (dispatch, userData) => {\r\n  dispatch({\r\n    type: 'CREATE_USER_START'\r\n  });\r\n  notAuthorizedPOST(`${url}`, userData)\r\n    .then(response => {\r\n      dispatch({\r\n        type: 'CREATE_USER_FULFILLED',\r\n        payload: response\r\n      });\r\n    })\r\n    .catch(error => {\r\n      console.log('login error', error);\r\n      dispatch({\r\n        type: 'CREATE_USER_REJECTED'\r\n      });\r\n    })\r\n}\r\n\r\nexport const loginUser = (dispatch, userData) => {\r\n  dispatch({\r\n    type: 'USER_LOGIN_START'\r\n  });\r\n  notAuthorizedPOST(`${url}/login`, userData)\r\n    .then(response => {\r\n      dispatch({\r\n        type: 'USER_LOGIN_FULFILLED',\r\n        payload: response\r\n      });\r\n    })\r\n    .catch(error => {\r\n      console.log('login error', error);\r\n      dispatch({\r\n        type: 'USER_LOGIN_REJECTED'\r\n      });\r\n    })\r\n}\r\n\r\nexport const logoutUser = (dispatch) => {\r\n  dispatch({\r\n    type: 'USER_LOGOUT'\r\n  });\r\n}\r\n","import { connect } from 'react-redux';\r\nimport { Dropdown } from 'semantic-ui-react';\r\nimport React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport { logoutUser } from '../../../actions/userActions';\r\n\r\nimport './profile.css';\r\n\r\nclass Profile extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  handleItemClick = (event, data) => {\r\n    const { value } = data;\r\n    if (value === 'logout') {\r\n      this.props.logoutUSer();\r\n      this.props.history.push('/');\r\n    }\r\n    //TODO user switch\r\n    if (value === 'myAcuarelas') {\r\n      this.props.history.push('/acuarelas-user');\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {name} = this.props.user.data;\r\n\r\n    const trigger = (\r\n      <svg width=\"35\" height=\"35\">\r\n        <circle cx=\"17\" cy=\"17\" r=\"17\" fill=\"#aeaeae\" />\r\n        <text x=\"50%\" y=\"50%\" textAnchor=\"middle\" fill=\"white\" fontSize=\"20px\" dy=\".3em\">\r\n          {name.toUpperCase().charAt(0)}\r\n        </text>\r\n        Sorry, your browser does not support inline SVG.\r\n      </svg>\r\n    );\r\n\r\n    const options = [\r\n      {\r\n        key: 'user',\r\n        text: (\r\n          <span>\r\n            Signed in as <strong>{name}</strong>\r\n          </span>\r\n        ),\r\n        disabled: true,\r\n      },\r\n      { key: 'settings', text: 'Settings', value: 'settings' },\r\n      { key: 'myAcuarelas', text: 'My acuarelas', value: 'myAcuarelas' },\r\n      { key: 'logout', text: 'Sign Out', value: 'logout' },\r\n    ];\r\n\r\n    return (\r\n      <Dropdown\r\n        trigger={trigger}\r\n        options={options}\r\n        pointing='top right'\r\n        icon={null}\r\n        style={{top:'13px'}}\r\n        onChange={this.handleItemClick}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  user: state.userStore.user\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  logoutUSer: () => logoutUser(dispatch)\r\n})\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Profile));\r\n","import { connect } from 'react-redux';\r\nimport { Menu, Icon, Container, Button } from 'semantic-ui-react';\r\nimport React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport Profile from '../user/profile/profile';\r\n\r\nimport './navigation.css';\r\n\r\nclass Navigation extends React.Component {\r\n\r\n  state = { activeItem: 'home' }\r\n\r\n  handleItemClick = (e, { name }) => {\r\n    this.setState({ activeItem: name });\r\n    if (name === 'home') {\r\n      this.props.history.push('/');\r\n    } else {\r\n      this.props.history.push(`/${name}`);\r\n    }\r\n  }\r\n\r\n  handleUploadAcuarela = () => {\r\n    this.props.history.push('/acuarela-form');\r\n  }\r\n\r\n  handleLogin = () => {\r\n    this.props.history.push('/login');\r\n  }\r\n\r\n  handleSignup = () => {\r\n    this.props.history.push('/signup');\r\n  }\r\n\r\n  render() {\r\n    const { activeItem } = this.state;\r\n    const { fixed, location } = this.props;\r\n\r\n    if (location.pathname === '/login' || location.pathname === '/signup') {\r\n      return ('');\r\n    }\r\n\r\n    return (\r\n      <div\r\n        // style={{ paddingBottom: '13px' }}\r\n      >\r\n        <Menu \r\n          fixed={fixed ? 'top' : null}\r\n          inverted={!fixed}\r\n          pointing={!fixed}\r\n          secondary={!fixed}\r\n          size='large'\r\n        >\r\n          <Container>\r\n            <Menu.Item\r\n              name='home'\r\n              active={activeItem === 'home'}\r\n              onClick={this.handleItemClick}\r\n            />\r\n            {/* <Menu.Item\r\n              name='history'\r\n              active={activeItem === 'history'}\r\n              onClick={this.handleItemClick}\r\n            /> */}\r\n            <Menu.Item\r\n              name='contact'\r\n              active={activeItem === 'contact'}\r\n              onClick={this.handleItemClick}\r\n            />\r\n            <Menu.Item\r\n              name='about'\r\n              active={activeItem === 'about'}\r\n              onClick={this.handleItemClick}\r\n            />\r\n            {this.props.user.isLoggedIn? (\r\n              <Menu.Menu position='right'>\r\n                <Menu.Item>\r\n                  {/*TODO <Input icon='search' placeholder='Search...' /> */}\r\n                </Menu.Item>\r\n                <Menu.Item>\r\n                  <Icon name='upload' onClick={this.handleUploadAcuarela}/>\r\n                </Menu.Item>\r\n                <Menu.Item>\r\n                  <Profile />\r\n                </Menu.Item>\r\n              </Menu.Menu>\r\n            ): '' }\r\n            {!this.props.user.isLoggedIn? (\r\n              <Menu.Item position='right' style={{paddingTop:'25px'}}>\r\n                <Button as='a' inverted={!fixed} onClick={this.handleLogin}>\r\n                  Log in\r\n                </Button>\r\n                <Button as='a' \r\n                  inverted={!fixed} \r\n                  primary={fixed} \r\n                  style={{ marginLeft: '0.5em' }}\r\n                  onClick={this.handleSignup}\r\n                >\r\n                  Sign Up\r\n                </Button>\r\n              </Menu.Item>\r\n            ): '' }\r\n          </Container>\r\n        </Menu>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  user: state.userStore.user\r\n})\r\n\r\nexport default withRouter(connect(mapStateToProps, {})(Navigation));\r\n","import {\r\n  Button,\r\n  Form,\r\n  Input,\r\n  Select,\r\n  TextArea,\r\n  Grid,\r\n  Header,\r\n  Message,\r\n  Icon,\r\n  Segment\r\n} from 'semantic-ui-react';\r\nimport { connect } from 'react-redux';\r\nimport { DateInput } from 'semantic-ui-calendar-react';\r\nimport React from 'react';\r\nimport { Redirect, Link } from 'react-router-dom';\r\n\r\nimport CustomTextInput from '../../common/customTextInput/customTextInput';\r\nimport { createUser } from '../../../actions/userActions';\r\nimport ValidatorHelper from '../../common/validator/validator';\r\n\r\nimport './signup.css';\r\n\r\n//where to save this?\r\nconst countryOptions = [\r\n  { key: 'ar', value: 'ar', flag: 'ar', text: 'Argentina' },\r\n  { key: 'bo', value: 'bo', flag: 'bo', text: 'Bolivia' },\r\n  { key: 'cl', value: 'cl', flag: 'cl', text: 'Chile' },\r\n  { key: 'cn', value: 'cn', flag: 'cn', text: 'China' },\r\n  { key: 'co', value: 'co', flag: 'co', text: 'Colombia' },\r\n  { key: 'it', value: 'it', flag: 'it', text: 'Italy' },\r\n  { key: 'jp', value: 'jp', flag: 'jp', text: 'Japan' },\r\n  { key: 'us', value: 'us', flag: 'us', text: 'United States' }\r\n];\r\n\r\nclass Signup extends React.Component {\r\n\r\n  state = {\r\n    name: '',\r\n    userName: '',\r\n    birthDate: '',\r\n    country: countryOptions[0].value,\r\n    phoneNumber: '',\r\n    email: '',\r\n    password: '',\r\n    description: ''\r\n  };\r\n\r\n  handleChangeDate = (event, {name, value}) => {\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  handleChange = (name, value) => {\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  handleSubmit = () => {\r\n    this.setState( prevState => ({\r\n      birthDate: new Date(prevState.birthDate)\r\n    }), () => {\r\n      this.props.createUser(this.state);\r\n    });\r\n  }\r\n\r\n  get isSubmitEnabled () {\r\n    //TODO date valitation is missing\r\n    const validators = [\r\n      ValidatorHelper.notEmptyText().isValid(this.state.name),\r\n      ValidatorHelper.maxLength(35).isValid(this.state.name),\r\n      ValidatorHelper.notEmptyText().isValid(this.state.userName),\r\n      ValidatorHelper.maxLength(35).isValid(this.state.userName),\r\n      ValidatorHelper.notEmptyValue().isValid(this.state.birthDate),\r\n      ValidatorHelper.notEmptyText().isValid(this.state.country),\r\n      ValidatorHelper.matchPhoneNumber().isValid(this.state.phoneNumber),\r\n      ValidatorHelper.notEmptyText().isValid(this.state.email),\r\n      ValidatorHelper.matchEmail().isValid(this.state.email),\r\n      ValidatorHelper.notEmptyText().isValid(this.state.password),\r\n      ValidatorHelper.minLength(8).isValid(this.state.password),\r\n      ValidatorHelper.maxLength(15).isValid(this.state.password),\r\n      ValidatorHelper.maxLength(300).isValid(this.state.description)\r\n    ];\r\n    return validators.every(validator => validator === true);\r\n    }\r\n\r\n  render() {\r\n    const { loading, user } = this.props;\r\n\r\n    if (user.isLoggedIn) return <Redirect to='/' />;\r\n\r\n    return (\r\n      <div style={{ minHeight: 700, paddingTop: '50px'}}>\r\n        <Grid textAlign='center' style={{ height: '100%' }} verticalAlign='middle'>\r\n        <Grid.Column style={{ maxWidth: 450 }}>\r\n          <Header as='h2' style={{ color: 'white' }} textAlign='center'>\r\n            <Icon.Group size='large'>\r\n              <Icon name='paint brush' />\r\n            </Icon.Group>\r\n            ACUAS\r\n          </Header>\r\n          <Form size='large' loading={loading} onSubmit={this.handleSubmit} error>\r\n            <Segment>\r\n              <CustomTextInput\r\n                name='name'\r\n                control={Input}\r\n                icon='user'\r\n                placeholder='Full name'\r\n                validators={[ValidatorHelper.notEmptyText(), ValidatorHelper.maxLength(35)]}\r\n                onChange={this.handleChange}\r\n                required={true}\r\n              />\r\n\r\n              <CustomTextInput\r\n                name='userName'\r\n                control={Input}\r\n                icon='user'\r\n                placeholder='User name'\r\n                validators={[ValidatorHelper.notEmptyText(), ValidatorHelper.maxLength(35)]}\r\n                onChange={this.handleChange}\r\n                required={true}\r\n              />\r\n\r\n              <DateInput\r\n                clearable\r\n                name='birthDate'\r\n                icon='birthday cake'\r\n                iconPosition='left'\r\n                value={this.state.birthDate}\r\n                onChange={this.handleChangeDate}\r\n                maxDate={new Date()}\r\n                popupPosition='bottom right'\r\n                closable\r\n                placeholder=\"Birthdate\"\r\n              />\r\n\r\n              <CustomTextInput\r\n                name='country'\r\n                control={Select}\r\n                placeholder=''\r\n                validators={[ValidatorHelper.notEmptyText()]}\r\n                onChange={this.handleChange}\r\n                required={true}\r\n                options={countryOptions}\r\n              />\r\n\r\n              <CustomTextInput\r\n                name='phoneNumber'\r\n                control={Input}\r\n                icon='call'\r\n                placeholder='Phone number'\r\n                validators={[ValidatorHelper.matchPhoneNumber()]}\r\n                onChange={this.handleChange}\r\n                required={false}\r\n              />\r\n\r\n              <CustomTextInput\r\n                name='email'\r\n                control={Input}\r\n                icon='mail'\r\n                placeholder='Email address'\r\n                validators={[ValidatorHelper.notEmptyText(), ValidatorHelper.matchEmail()]}\r\n                onChange={this.handleChange}\r\n                required={true}\r\n              />\r\n\r\n              <CustomTextInput\r\n                name='password'\r\n                type='password'\r\n                control={Input}\r\n                icon='lock'\r\n                placeholder='Password'\r\n                validators={[ValidatorHelper.notEmptyText(), ValidatorHelper.maxLength(15), ValidatorHelper.minLength(8)]}\r\n                onChange={this.handleChange}\r\n                required={true}\r\n              />\r\n\r\n              <CustomTextInput\r\n                name='description'\r\n                control={TextArea}\r\n                placeholder='Write a litlte description about you'\r\n                validators={[ValidatorHelper.maxLength(300)]}\r\n                onChange={this.handleChange}\r\n                required={false}\r\n              />\r\n\r\n              <Button primary disabled={!this.isSubmitEnabled} color='teal' fluid size='large'>\r\n                Create account\r\n              </Button>\r\n            </Segment>\r\n          </Form>\r\n          <Message>\r\n            <Link to='/login'>Back to login</Link>\r\n          </Message>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  user: state.userStore.user,\r\n  loading: state.userStore.loading\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  createUser: (userData) => createUser(dispatch, userData)\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup);\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\n/**\r\n * Private route only for users logged in\r\n */\r\nconst PrivateRoute = ({component: Component, authed, ...rest}) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => authed === true\r\n        ? <Component {...props} />\r\n        : <Redirect to='/login' push/> }\r\n    />\r\n  )\r\n}\r\n\r\nexport default PrivateRoute\r\n","import { connect } from 'react-redux';\r\nimport React, { Component } from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\n\r\nimport AcuarelaDetail from './components/acuarelas/acuarelaDetail/acuarelaDetail';\r\nimport About from './components/about';\r\nimport AcuarelaFormPage from './components/acuarelas/acuarelaFormPage/acuarelaFormPage';\r\nimport AcuarelasByUser from './components/acuarelas/acuarelasByUser/acuarelasByUser';\r\nimport ErrorComponent from './components/error';\r\nimport Contact from './components/contact';\r\nimport Home from './components/home/home';\r\n// import HistoryComponent from './Components/History';\r\nimport Login from './components/user/login/login';\r\nimport Navigation from './components/navigation/navigation';\r\nimport Signup from './components/user/signup/signup';\r\nimport PrivateRoute from './components/common/privateRoute/privateRoute';\r\n\r\nimport './app.css';\r\n\r\nclass App extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {}\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <div className='main'>\r\n          <Navigation />\r\n          <Switch>\r\n            <Route path='/' component={Home} exact />\r\n            {/* <PrivateRoute authed={this.props.user.isLoggedIn} path='/history' component={HistoryComponent} /> */}\r\n            <Route path='/about' component={About} />\r\n            <Route path='/acuarela-detail/:id' component={AcuarelaDetail} />\r\n            <PrivateRoute authed={this.props.user.isLoggedIn} path='/acuarelas-user' component={AcuarelasByUser} />\r\n            <Route path='/contact' component={Contact} />\r\n            <PrivateRoute authed={this.props.user.isLoggedIn} path='/acuarela-form' component={AcuarelaFormPage} />\r\n            <Route path='/login' component={Login} />\r\n            <Route path='/signup' component={Signup} />\r\n            <Route component={ErrorComponent} />\r\n          </Switch>\r\n        </div>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  user: state.userStore.user\r\n})\r\n\r\nexport default connect(mapStateToProps, {})(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import App from './app';\r\nimport { Provider } from 'react-redux';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\nimport store from './store';\r\n\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App/>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}